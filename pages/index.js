import Head from 'next/head'
import Image from 'next/image'
import { useEffect, useState,useRef } from 'react'
import { Inter } from '@next/font/google'
import Footer from 'Components/Footer'
import Navbar from 'Components/Navbar'
import Product from 'models/Product'
import mongoose from 'mongoose'
import styles from '../styles/index.module.css'
import Recommendproducts from 'Components/Recommendproducts'
import bgimg from '../assets/images/backgrounds/shoesdemo.jpg'
import Link from 'next/link'
import Script from 'next/script'
import AnimatedText from '../Components/AnimatedText'
import FeaturedLogos from 'Components/FeaturedLogos'
import Rating from 'Components/Rating'
import Features from 'Components/Features'
import Collections from 'Components/Collections'
import Services from 'Components/Services'
const inter = Inter({ subsets: ['latin'] })


export default function Home({user,logout,addcart,removecart,clearcart,cart,subtotal,itemsincart,products}) {
  // console.log(products);
  const collectionsRef = useRef(null);

  const scrollToCollections = () => {
    collectionsRef.current.scrollIntoView({
      behavior: 'smooth',
      block: 'start',
    });
  };
  
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
        <Script src="https://ajax.aspnetcdn.com/ajax/jQuery/jquery-3.4.1.min.js"></Script>
      </Head>
      <Navbar user={user} logout={logout} itemsincart={itemsincart} heading="Home"/>
      <div className={`w-full inline-block z-0 bg-white`}>
      <div className='flex flex-col items-start 2xl:items-center 3xl:items-start justify-between w-full lg:flex-row px-6 py-16 bg-[#f4f8fd] sm:!px-12 md:!px-24 lg:!px-32 xl:!px-41 2xl:!px-56 3xl:!px-84'>      
            <div className={`w-full flex flex-col lg:!w-1/2 ${styles.slide_in} 3xl:!w-[45%] py-20 lg:!py-0`}>
              <AnimatedText text="Shoes for Every Style and Need" className='3xl:!text-8xl 2xl:!text-7xl xl:!text-6xl lg:!text-left 
              lg:!text-5xl !text-center md:!text-6xl sm:!text-5xl !text-3xl
              '/>
              <p className='text-center lg:!text-left my-6 text-[#565656] sm:!text-2xl xl:!text-xl 2xl:!text-2xl 3xl:!text-3xl 3xl:my-12'>
              Welcome to Shoespedia, your go-to destination for high-quality shoes that combine comfort, durability, and style to meet all your footwear needs.
              </p>
              <div className='flex items-center lg:self-start mt-2 self-center'>
                <button  className='flex items-center bg-[#2270e2] text-white py-3 px-8 rounded-lg text-base font-semibold border border-solid border-transparent md:text-xl 2xl:!text-xl 3xl:!text-2xl hover:bg-black' onClick={scrollToCollections}>View Collections
</button>
                <Link href="/contact" target={'_blank'}><a className='ml-4 text-base font-medium capitalize text-black hover:underline md:text-xl 2xl:!text-xl 3xl:!text-2xl'>Contact</a></Link>

              </div>
            </div>
            <div className={`w-3/4 m-auto lg:!m-0 lg:!w-1/3 ${styles.slide_out_in}`}>
              <Image src={bgimg} alt="Sujal Sahu" className='inline-block border rounded-xl w-full h-full' priority/>
            </div>
          </div>
      </div>

      <FeaturedLogos/>
      <Rating/>
      <div className="bg-[#f4f8fd] pt-1 pb-20">
      <Services/>
      <Features/>
      </div>
      <section ref={collectionsRef}>
      <Collections/>
      </section>
    <div className="recommend-heading mx-12 mt-28 mb-4">
    <h1 class="sm:text-3xl text-2xl font-medium title-font m-2 text-gray-900 aos-init aos-animate" data-aos="zoom-in-up" data-aos-anchor-placement="top-bottom">Bestselling Products</h1>
      <div class="h-1 w-20 bg-pink-500 rounded"></div>
    </div>
    <Recommendproducts products={products}/>
       <Footer/>
    </>
  )
}

export async function getServerSideProps(context){
  if(!mongoose.connections[0].readyState){
    await mongoose.connect(process.env.MONGO_URI);
  }
  let products=await Product.find();
  return{
    props:{products:JSON.parse(JSON.stringify(products))}
  }
}


